@startuml
'idea.partialRender

title __CONTROLLERS's Class Diagram__\n

  namespace app {
    namespace controllers {
      class app.controllers.ClassController {
          ~ oblist : ObservableList<Class>
          - col_delbtn : TableColumn<Class, Button>
          - col_ects : TableColumn<Class, String>
          - col_id : TableColumn<Class, Integer>
          - col_name : TableColumn<Class, String>
          - col_semester : TableColumn<Class, String>
          - col_updatebtn : TableColumn<Class, Button>
          - tableView : TableView<Class>
          + initialize()
          ~ addClass()
          ~ home()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.DashboardController {
          ~ oblist : ObservableList<Attendance>
          ~ stlist : ObservableList<StudentList>
          - classC : Label
          - col_att : TableColumn<StudentList, String>
          - col_attBtn : TableColumn<StudentList, Button>
          - col_attended : TableColumn<Attendance, String>
          - col_btn : TableColumn<Attendance, Button>
          - col_class : TableColumn<Attendance, String>
          - col_hour : TableColumn<Attendance, String>
          - col_indexnum : TableColumn<StudentList, String>
          - col_studentName : TableColumn<StudentList, String>
          - col_tcid : TableColumn<Attendance, String>
          - col_teacher : TableColumn<Attendance, String>
          - col_ywd : TableColumn<Attendance, String>
          - hourCount : Label
          - stTable : TableView<StudentList>
          - studentCount : Label
          - table : TableView<Attendance>
          + initialize()
          + refresh()
          ~ home()
          ~ listStudents()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.HomeController {
          + initialize()
          ~ classes()
          ~ dashboard()
          ~ options()
          ~ students()
          ~ timetable()
          ~ update()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.LoginController {
          - pf_pass : PasswordField
          - tf_mail : TextField
          + initialize()
          ~ login()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.OptionsController {
          ~ oblist : ObservableList<User>
          - col_delbtn : TableColumn<User, Button>
          - col_email : TableColumn<User, String>
          - col_firstname : TableColumn<User, String>
          - col_id : TableColumn<User, Integer>
          - col_lastname : TableColumn<User, String>
          - col_updatebtn : TableColumn<User, Button>
          - tableView : TableView<User>
          + initialize()
          ~ addNewTeacher()
          ~ home()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.RegisterController {
          - pf_confirm : PasswordField
          - pf_password : PasswordField
          - tf_email : TextField
          - tf_firstname : TextField
          - tf_lastname : TextField
          + initialize()
          ~ login()
          ~ register()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.StudentsController {
          ~ oblist : ObservableList<User>
          - col_brindex : TableColumn<User, String>
          - col_delbtn : TableColumn<User, Button>
          - col_email : TableColumn<User, String>
          - col_firstname : TableColumn<User, String>
          - col_id : TableColumn<User, Integer>
          - col_lastname : TableColumn<User, String>
          - col_updatebtn : TableColumn<User, Button>
          - tableView : TableView<User>
          + initialize()
          ~ addNewStudent()
          ~ home()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.TimetableController {
          ~ List : ObservableList<Timetable>
          - col_fri : TableColumn<Timetable, String>
          - col_hour : TableColumn<Timetable, String>
          - col_mon : TableColumn<Timetable, String>
          - col_thur : TableColumn<Timetable, String>
          - col_tue : TableColumn<Timetable, String>
          - col_wed : TableColumn<Timetable, String>
          - table : TableView<Timetable>
          - week_drop : ChoiceBox<String>
          - year_drop : ChoiceBox<String>
          + initialize()
          ~ fillTable()
          ~ home()
          ~ setWeek()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.UpdateController {
          - btn_delete : Button
          - btn_update : Button
          - btn_update1 : Button
          - drop_class : ChoiceBox<String>
          - drop_class1 : ChoiceBox<String>
          - drop_day : ChoiceBox<String>
          - drop_day1 : ChoiceBox<String>
          - drop_ends : ChoiceBox<Integer>
          - drop_ends1 : ChoiceBox<Integer>
          - drop_starts : ChoiceBox<Integer>
          - drop_starts1 : ChoiceBox<Integer>
          - drop_timetable : ChoiceBox<Integer>
          - drop_week : ChoiceBox<String>
          - drop_week1 : ChoiceBox<String>
          - drop_year : ChoiceBox<String>
          - drop_year1 : ChoiceBox<String>
          + initialize()
          ~ ClassSet()
          ~ ClassSet1()
          ~ Dayset()
          ~ Dayset1()
          ~ Weekset()
          ~ Weekset1()
          ~ addTimetable()
          ~ btnEnable()
          ~ chooseTT()
          ~ deleteTimetable()
          ~ home()
          ~ hourEndSet()
          ~ hourEndSet1()
          ~ hourStartSet()
          ~ hourStartSet1()
          ~ updateTimetable()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.newClassController {
          - drop_teacher : ChoiceBox<Integer>
          - lab_teacher : Label
          - tf_ects : TextField
          - tf_name : TextField
          - tf_semester : TextField
          + initialize()
          ~ addClass()
          ~ setLabel()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.newStudentController {
          - tf_email : TextField
          - tf_firstname : TextField
          - tf_index : TextField
          - tf_lastname : TextField
          + initialize()
          ~ addStudent()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.updateClassController {
          - drop_teacher : ChoiceBox<Integer>
          - lab_teacher : Label
          - tf_ects : TextField
          - tf_name : TextField
          - tf_semester : TextField
          + initialize()
          + setValues()
          ~ setLabel()
          ~ updateClass()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.updateStudentController {
          - rootEl : AnchorPane
          - tf_email1 : TextField
          - tf_firstname1 : TextField
          - tf_index1 : TextField
          - tf_lastname1 : TextField
          + initialize()
          + setValues()
          ~ updateStudent()
      }
    }
  }
  

  namespace app {
    namespace controllers {
      class app.controllers.updateTeacherController {
          - pf_confirm : PasswordField
          - pf_password : PasswordField
          - rootEl : AnchorPane
          - tf_email : TextField
          - tf_firstname : TextField
          - tf_lastname : TextField
          + initialize()
          + setValues()
          ~ updateTeacher()
      }
    }
  }
  

  app.controllers.ClassController .up.|> javafx.fxml.Initializable
  app.controllers.DashboardController .up.|> javafx.fxml.Initializable
  app.controllers.HomeController .up.|> javafx.fxml.Initializable
  app.controllers.LoginController .up.|> javafx.fxml.Initializable
  app.controllers.OptionsController .up.|> javafx.fxml.Initializable
  app.controllers.RegisterController .up.|> javafx.fxml.Initializable
  app.controllers.StudentsController .up.|> javafx.fxml.Initializable
  app.controllers.TimetableController .up.|> javafx.fxml.Initializable
  app.controllers.UpdateController .up.|> javafx.fxml.Initializable
  app.controllers.newClassController .up.|> javafx.fxml.Initializable
  app.controllers.newStudentController .up.|> javafx.fxml.Initializable
  app.controllers.updateClassController .up.|> javafx.fxml.Initializable
  app.controllers.updateStudentController .up.|> javafx.fxml.Initializable
  app.controllers.updateTeacherController .up.|> javafx.fxml.Initializable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
